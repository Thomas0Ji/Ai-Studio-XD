!pip install python-telegram-bot==20.3 moviepy TTS ffmpeg-python pillow --quiet
!sudo apt-get update -qq && sudo apt-get install -y ffmpeg libheif-examples

# 2Ô∏è‚É£ ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ö‡∏≠‡∏ó‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏∞‡∏ö‡∏ö
import os, asyncio, tempfile
from telegram import Update, InputFile, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from moviepy.editor import ImageSequenceClip, AudioFileClip
from TTS.api import TTS

# === TOKEN ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ===
TOKEN = "8143985946:AAEuULl355JlaQjDmcHe_vAzFMBhXqqhKKY"

# === ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏≤‡∏Å‡∏¢‡πå ===
tts = TTS("tts_models/thai/glow-tts", progress_bar=False, gpu=False)

# === ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏á‡∏≤‡∏ô ===
os.makedirs("jobs", exist_ok=True)

# === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    menu = [["/‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÅ‡∏£‡∏Å"], ["/‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ", "/‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ"]]
    await update.message.reply_text(
        "üëã ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡∏ú‡∏°‡∏Ñ‡∏∑‡∏≠‡∏ö‡∏≠‡∏ó‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞ üé¨\n\n"
        "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏û ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≤‡∏Å‡∏¢‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢",
        reply_markup=ReplyKeyboardMarkup(menu, resize_keyboard=True)
    )

async def photo_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    job_dir = f"jobs/{user_id}"
    os.makedirs(job_dir, exist_ok=True)
    file = await update.message.photo[-1].get_file()
    path = os.path.join(job_dir, f"img_{len(os.listdir(job_dir))}.jpg")
    await file.download_to_drive(path)
    await update.message.reply_text(f"‚úÖ ‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏•‡πâ‡∏ß: {os.path.basename(path)}")

async def clear_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    job_dir = f"jobs/{user_id}"
    if os.path.exists(job_dir):
        for f in os.listdir(job_dir):
            os.remove(os.path.join(job_dir, f))
        await update.message.reply_text("üßπ ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")
    else:
        await update.message.reply_text("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡∏ô‡∏∞!")

async def help_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:\n"
        "1Ô∏è‚É£ ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó\n"
        "2Ô∏è‚É£ ‡∏û‡∏¥‡∏°‡∏û‡πå /‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ <‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏û‡∏≤‡∏Å‡∏¢‡πå>\n"
        "3Ô∏è‚É£ ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ üé•"
    )

async def make_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = " ".join(context.args)
    if not text:
        await update.message.reply_text("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö")
        return

    user_id = update.effective_user.id
    job_dir = f"jobs/{user_id}"
    imgs = sorted([os.path.join(job_dir, f) for f in os.listdir(job_dir) if f.endswith('.jpg')])

    if not imgs:
        await update.message.reply_text("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÄ‡∏•‡∏¢ ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö!")
        return

    await update.message.reply_text("üé¨ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠... ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà!")

    audio_path = os.path.join(job_dir, "voice.wav")
    tts.tts_to_file(text=text, file_path=audio_path)

    clip = ImageSequenceClip(imgs, fps=1)
    audioclip = AudioFileClip(audio_path)
    clip = clip.set_audio(audioclip)
    out_path = os.path.join(job_dir, "final.mp4")
    clip.write_videofile(out_path, fps=24, codec="libx264", audio_codec="aac")

    await update.message.reply_video(video=InputFile(out_path))
    await update.message.reply_text("‚ú® ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß üé•")

# === ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó ===
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ", clear_handler))
app.add_handler(CommandHandler("‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ", help_handler))
app.add_handler(CommandHandler("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠", make_handler))
app.add_handler(MessageHandler(filters.PHOTO, photo_handler))

print("üöÄ ‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß...")
app.run_polling()